// Code generated by protoc-gen-go. DO NOT EDIT.
// source: study.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StudyMetaData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartDate            int64    `protobuf:"varint,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Users                []string `protobuf:"bytes,6,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudyMetaData) Reset()         { *m = StudyMetaData{} }
func (m *StudyMetaData) String() string { return proto.CompactTextString(m) }
func (*StudyMetaData) ProtoMessage()    {}
func (*StudyMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{0}
}

func (m *StudyMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudyMetaData.Unmarshal(m, b)
}
func (m *StudyMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudyMetaData.Marshal(b, m, deterministic)
}
func (m *StudyMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudyMetaData.Merge(m, src)
}
func (m *StudyMetaData) XXX_Size() int {
	return xxx_messageInfo_StudyMetaData.Size(m)
}
func (m *StudyMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_StudyMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_StudyMetaData proto.InternalMessageInfo

func (m *StudyMetaData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StudyMetaData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StudyMetaData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StudyMetaData) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *StudyMetaData) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StudyMetaData) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type StudyID struct {
	StudyID              string   `protobuf:"bytes,1,opt,name=studyID,proto3" json:"studyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudyID) Reset()         { *m = StudyID{} }
func (m *StudyID) String() string { return proto.CompactTextString(m) }
func (*StudyID) ProtoMessage()    {}
func (*StudyID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{2}
}

func (m *StudyID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudyID.Unmarshal(m, b)
}
func (m *StudyID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudyID.Marshal(b, m, deterministic)
}
func (m *StudyID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudyID.Merge(m, src)
}
func (m *StudyID) XXX_Size() int {
	return xxx_messageInfo_StudyID.Size(m)
}
func (m *StudyID) XXX_DiscardUnknown() {
	xxx_messageInfo_StudyID.DiscardUnknown(m)
}

var xxx_messageInfo_StudyID proto.InternalMessageInfo

func (m *StudyID) GetStudyID() string {
	if m != nil {
		return m.StudyID
	}
	return ""
}

type StudyArray struct {
	Studies              []*StudyMetaData `protobuf:"bytes,1,rep,name=studies,proto3" json:"studies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StudyArray) Reset()         { *m = StudyArray{} }
func (m *StudyArray) String() string { return proto.CompactTextString(m) }
func (*StudyArray) ProtoMessage()    {}
func (*StudyArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{3}
}

func (m *StudyArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudyArray.Unmarshal(m, b)
}
func (m *StudyArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudyArray.Marshal(b, m, deterministic)
}
func (m *StudyArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudyArray.Merge(m, src)
}
func (m *StudyArray) XXX_Size() int {
	return xxx_messageInfo_StudyArray.Size(m)
}
func (m *StudyArray) XXX_DiscardUnknown() {
	xxx_messageInfo_StudyArray.DiscardUnknown(m)
}

var xxx_messageInfo_StudyArray proto.InternalMessageInfo

func (m *StudyArray) GetStudies() []*StudyMetaData {
	if m != nil {
		return m.Studies
	}
	return nil
}

type SignUpData struct {
	StudyID              string        `protobuf:"bytes,1,opt,name=studyID,proto3" json:"studyID,omitempty"`
	User                 *UserMetaData `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SignUpData) Reset()         { *m = SignUpData{} }
func (m *SignUpData) String() string { return proto.CompactTextString(m) }
func (*SignUpData) ProtoMessage()    {}
func (*SignUpData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{4}
}

func (m *SignUpData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpData.Unmarshal(m, b)
}
func (m *SignUpData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpData.Marshal(b, m, deterministic)
}
func (m *SignUpData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpData.Merge(m, src)
}
func (m *SignUpData) XXX_Size() int {
	return xxx_messageInfo_SignUpData.Size(m)
}
func (m *SignUpData) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpData.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpData proto.InternalMessageInfo

func (m *SignUpData) GetStudyID() string {
	if m != nil {
		return m.StudyID
	}
	return ""
}

func (m *SignUpData) GetUser() *UserMetaData {
	if m != nil {
		return m.User
	}
	return nil
}

type Trigger struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Condition            []string  `protobuf:"bytes,2,rep,name=condition,proto3" json:"condition,omitempty"`
	Action               []*Action `protobuf:"bytes,3,rep,name=action,proto3" json:"action,omitempty"`
	StudyID              string    `protobuf:"bytes,4,opt,name=studyID,proto3" json:"studyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{5}
}

func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (m *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(m, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

func (m *Trigger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Trigger) GetCondition() []string {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Trigger) GetAction() []*Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *Trigger) GetStudyID() string {
	if m != nil {
		return m.StudyID
	}
	return ""
}

type Trigger_Condition struct {
	Condition            []string `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trigger_Condition) Reset()         { *m = Trigger_Condition{} }
func (m *Trigger_Condition) String() string { return proto.CompactTextString(m) }
func (*Trigger_Condition) ProtoMessage()    {}
func (*Trigger_Condition) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{5, 0}
}

func (m *Trigger_Condition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger_Condition.Unmarshal(m, b)
}
func (m *Trigger_Condition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger_Condition.Marshal(b, m, deterministic)
}
func (m *Trigger_Condition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger_Condition.Merge(m, src)
}
func (m *Trigger_Condition) XXX_Size() int {
	return xxx_messageInfo_Trigger_Condition.Size(m)
}
func (m *Trigger_Condition) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger_Condition.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger_Condition proto.InternalMessageInfo

func (m *Trigger_Condition) GetCondition() []string {
	if m != nil {
		return m.Condition
	}
	return nil
}

type TriggerArray struct {
	Triggers             []*Trigger `protobuf:"bytes,1,rep,name=triggers,proto3" json:"triggers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TriggerArray) Reset()         { *m = TriggerArray{} }
func (m *TriggerArray) String() string { return proto.CompactTextString(m) }
func (*TriggerArray) ProtoMessage()    {}
func (*TriggerArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{6}
}

func (m *TriggerArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerArray.Unmarshal(m, b)
}
func (m *TriggerArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerArray.Marshal(b, m, deterministic)
}
func (m *TriggerArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerArray.Merge(m, src)
}
func (m *TriggerArray) XXX_Size() int {
	return xxx_messageInfo_TriggerArray.Size(m)
}
func (m *TriggerArray) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerArray.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerArray proto.InternalMessageInfo

func (m *TriggerArray) GetTriggers() []*Trigger {
	if m != nil {
		return m.Triggers
	}
	return nil
}

type Action struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{7}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Action) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Attributes struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	Sick                 string   `protobuf:"bytes,3,opt,name=sick,proto3" json:"sick,omitempty"`
	Weight               int32    `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attributes) Reset()         { *m = Attributes{} }
func (m *Attributes) String() string { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()    {}
func (*Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{8}
}

func (m *Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attributes.Unmarshal(m, b)
}
func (m *Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attributes.Marshal(b, m, deterministic)
}
func (m *Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attributes.Merge(m, src)
}
func (m *Attributes) XXX_Size() int {
	return xxx_messageInfo_Attributes.Size(m)
}
func (m *Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Attributes proto.InternalMessageInfo

func (m *Attributes) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Attributes) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Attributes) GetSick() string {
	if m != nil {
		return m.Sick
	}
	return ""
}

func (m *Attributes) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type UserMetaData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TimeLastAssigned     int64    `protobuf:"varint,2,opt,name=timeLastAssigned,proto3" json:"timeLastAssigned,omitempty"`
	TimeToSend           int64    `protobuf:"varint,3,opt,name=timeToSend,proto3" json:"timeToSend,omitempty"`
	TimeLastAssigned2    int64    `protobuf:"varint,4,opt,name=timeLastAssigned2,proto3" json:"timeLastAssigned2,omitempty"`
	TimeToSend2          int64    `protobuf:"varint,5,opt,name=timeToSend2,proto3" json:"timeToSend2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMetaData) Reset()         { *m = UserMetaData{} }
func (m *UserMetaData) String() string { return proto.CompactTextString(m) }
func (*UserMetaData) ProtoMessage()    {}
func (*UserMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{9}
}

func (m *UserMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMetaData.Unmarshal(m, b)
}
func (m *UserMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMetaData.Marshal(b, m, deterministic)
}
func (m *UserMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMetaData.Merge(m, src)
}
func (m *UserMetaData) XXX_Size() int {
	return xxx_messageInfo_UserMetaData.Size(m)
}
func (m *UserMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_UserMetaData proto.InternalMessageInfo

func (m *UserMetaData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserMetaData) GetTimeLastAssigned() int64 {
	if m != nil {
		return m.TimeLastAssigned
	}
	return 0
}

func (m *UserMetaData) GetTimeToSend() int64 {
	if m != nil {
		return m.TimeToSend
	}
	return 0
}

func (m *UserMetaData) GetTimeLastAssigned2() int64 {
	if m != nil {
		return m.TimeLastAssigned2
	}
	return 0
}

func (m *UserMetaData) GetTimeToSend2() int64 {
	if m != nil {
		return m.TimeToSend2
	}
	return 0
}

type AssignedSurvey struct {
	Id                   string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Survey               *SurveyData `protobuf:"bytes,2,opt,name=survey,proto3" json:"survey,omitempty"`
	UserID               string      `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	StudyID              string      `protobuf:"bytes,4,opt,name=studyID,proto3" json:"studyID,omitempty"`
	Timestamp            int64       `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Submitted            bool        `protobuf:"varint,6,opt,name=submitted,proto3" json:"submitted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AssignedSurvey) Reset()         { *m = AssignedSurvey{} }
func (m *AssignedSurvey) String() string { return proto.CompactTextString(m) }
func (*AssignedSurvey) ProtoMessage()    {}
func (*AssignedSurvey) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{10}
}

func (m *AssignedSurvey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignedSurvey.Unmarshal(m, b)
}
func (m *AssignedSurvey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignedSurvey.Marshal(b, m, deterministic)
}
func (m *AssignedSurvey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignedSurvey.Merge(m, src)
}
func (m *AssignedSurvey) XXX_Size() int {
	return xxx_messageInfo_AssignedSurvey.Size(m)
}
func (m *AssignedSurvey) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignedSurvey.DiscardUnknown(m)
}

var xxx_messageInfo_AssignedSurvey proto.InternalMessageInfo

func (m *AssignedSurvey) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AssignedSurvey) GetSurvey() *SurveyData {
	if m != nil {
		return m.Survey
	}
	return nil
}

func (m *AssignedSurvey) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AssignedSurvey) GetStudyID() string {
	if m != nil {
		return m.StudyID
	}
	return ""
}

func (m *AssignedSurvey) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AssignedSurvey) GetSubmitted() bool {
	if m != nil {
		return m.Submitted
	}
	return false
}

type Answer struct {
	AssignmentID         string      `protobuf:"bytes,1,opt,name=assignmentID,proto3" json:"assignmentID,omitempty"`
	Survey               *SurveyData `protobuf:"bytes,2,opt,name=survey,proto3" json:"survey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b59e246e4c4c09f0, []int{11}
}

func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (m *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(m, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetAssignmentID() string {
	if m != nil {
		return m.AssignmentID
	}
	return ""
}

func (m *Answer) GetSurvey() *SurveyData {
	if m != nil {
		return m.Survey
	}
	return nil
}

func init() {
	proto.RegisterType((*StudyMetaData)(nil), "api.StudyMetaData")
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*StudyID)(nil), "api.StudyID")
	proto.RegisterType((*StudyArray)(nil), "api.StudyArray")
	proto.RegisterType((*SignUpData)(nil), "api.SignUpData")
	proto.RegisterType((*Trigger)(nil), "api.Trigger")
	proto.RegisterType((*Trigger_Condition)(nil), "api.Trigger.Condition")
	proto.RegisterType((*TriggerArray)(nil), "api.TriggerArray")
	proto.RegisterType((*Action)(nil), "api.Action")
	proto.RegisterType((*Attributes)(nil), "api.Attributes")
	proto.RegisterType((*UserMetaData)(nil), "api.UserMetaData")
	proto.RegisterType((*AssignedSurvey)(nil), "api.AssignedSurvey")
	proto.RegisterType((*Answer)(nil), "api.Answer")
}

func init() { proto.RegisterFile("study.proto", fileDescriptor_b59e246e4c4c09f0) }

var fileDescriptor_b59e246e4c4c09f0 = []byte{
	// 770 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xc1, 0x6e, 0xda, 0x4c,
	0x10, 0x96, 0x31, 0x36, 0x61, 0x0c, 0x49, 0xd8, 0xff, 0x57, 0x65, 0x59, 0x51, 0x85, 0x1c, 0x55,
	0x25, 0x2d, 0x8d, 0x52, 0xda, 0x48, 0x6d, 0x6f, 0x34, 0xb4, 0x51, 0xa5, 0xe4, 0x62, 0xc2, 0xa5,
	0xb7, 0x05, 0xaf, 0xc8, 0x2a, 0x60, 0x2c, 0xef, 0x92, 0x88, 0xc7, 0xe9, 0x53, 0x54, 0xea, 0x83,
	0xf5, 0x5c, 0xed, 0xec, 0x02, 0x76, 0x20, 0x55, 0xb9, 0x79, 0xbe, 0x9d, 0xd9, 0x6f, 0xe6, 0xdb,
	0x99, 0x31, 0x78, 0x42, 0xce, 0xe3, 0xc5, 0x69, 0x9a, 0xcd, 0xe4, 0x8c, 0xd8, 0x34, 0xe5, 0x41,
	0x4d, 0xcc, 0xb3, 0x7b, 0x66, 0xa0, 0xf0, 0x87, 0x05, 0xf5, 0xbe, 0x72, 0xb9, 0x66, 0x92, 0xf6,
	0xa8, 0xa4, 0x64, 0x1f, 0x4a, 0x3c, 0xf6, 0xad, 0xa6, 0xd5, 0xaa, 0x46, 0x25, 0x1e, 0x13, 0x02,
	0xe5, 0x84, 0x4e, 0x99, 0x5f, 0x42, 0x04, 0xbf, 0x49, 0x13, 0xbc, 0x98, 0x89, 0x51, 0xc6, 0x53,
	0xc9, 0x67, 0x89, 0x6f, 0xe3, 0x51, 0x1e, 0x22, 0x47, 0x50, 0x15, 0x92, 0x66, 0xb2, 0x47, 0x25,
	0xf3, 0xcb, 0x4d, 0xab, 0x65, 0x47, 0x6b, 0x80, 0x3c, 0x03, 0x57, 0x48, 0x2a, 0xe7, 0xc2, 0x77,
	0x30, 0xd4, 0x58, 0xe4, 0x7f, 0x70, 0xe6, 0x82, 0x65, 0xc2, 0x77, 0x9b, 0x76, 0xab, 0x1a, 0x69,
	0x23, 0xac, 0x80, 0xf3, 0x65, 0x9a, 0xca, 0x45, 0x78, 0x0c, 0x15, 0xcc, 0xf5, 0x5b, 0x8f, 0xf8,
	0x50, 0x11, 0xfa, 0xd3, 0xa4, 0xba, 0x34, 0xc3, 0x4f, 0x00, 0xe8, 0xd4, 0xcd, 0x32, 0xba, 0x20,
	0x6d, 0xed, 0xc7, 0x99, 0xf0, 0xad, 0xa6, 0xdd, 0xf2, 0x3a, 0xe4, 0x94, 0xa6, 0xfc, 0xb4, 0x50,
	0x72, 0xb4, 0x74, 0x09, 0xaf, 0x01, 0xfa, 0x7c, 0x9c, 0x0c, 0x52, 0x54, 0xe2, 0x49, 0x0e, 0xf2,
	0x02, 0xca, 0x2a, 0x35, 0xd4, 0xc4, 0xeb, 0x34, 0xf0, 0xca, 0x81, 0x60, 0xd9, 0xea, 0x46, 0x3c,
	0x56, 0xe2, 0x56, 0x6e, 0x32, 0x3e, 0x1e, 0xb3, 0x6c, 0x43, 0xd6, 0x23, 0xa8, 0x8e, 0x66, 0x49,
	0xcc, 0x51, 0xc0, 0x12, 0x96, 0xbb, 0x06, 0xc8, 0x31, 0xb8, 0x74, 0x64, 0xb4, 0x55, 0x59, 0x7b,
	0x48, 0xd1, 0x45, 0x28, 0x32, 0x47, 0xf9, 0xfc, 0xca, 0x85, 0xfc, 0x82, 0x13, 0xa8, 0x5e, 0xac,
	0xee, 0x2a, 0x30, 0x59, 0x8f, 0x98, 0xc2, 0x0f, 0x50, 0x33, 0x29, 0x6a, 0xc1, 0x5a, 0xb0, 0x27,
	0xb5, 0xbd, 0x54, 0xac, 0x86, 0xdc, 0xc6, 0x29, 0x5a, 0x9d, 0x86, 0x1d, 0x70, 0x75, 0x42, 0xaa,
	0x45, 0xe4, 0x22, 0x65, 0xa6, 0x3a, 0xfc, 0x56, 0x4f, 0x79, 0x4f, 0x27, 0xf3, 0x65, 0xdf, 0x68,
	0x23, 0x1c, 0x02, 0x74, 0xa5, 0xcc, 0xf8, 0x70, 0x2e, 0x99, 0x50, 0x6d, 0xa0, 0x74, 0x5a, 0xe9,
	0x6b, 0x2c, 0x72, 0x08, 0x36, 0x1d, 0xeb, 0x48, 0x27, 0x52, 0x9f, 0x8a, 0x41, 0xf0, 0xd1, 0x9d,
	0xe9, 0x34, 0xfc, 0x56, 0xd1, 0x0f, 0x8c, 0x8f, 0x6f, 0x25, 0x56, 0xef, 0x44, 0xc6, 0x0a, 0x7f,
	0x59, 0x50, 0xcb, 0x3f, 0xc6, 0x86, 0xf4, 0xaf, 0xe0, 0x50, 0xf2, 0x29, 0xbb, 0xa2, 0x42, 0x76,
	0x85, 0xe0, 0xe3, 0x84, 0xc5, 0xc8, 0x65, 0x47, 0x1b, 0x38, 0x79, 0x0e, 0xa0, 0xb0, 0x9b, 0x59,
	0x9f, 0x25, 0x31, 0xd2, 0xdb, 0x51, 0x0e, 0x21, 0x6d, 0x68, 0x3c, 0x8e, 0xe9, 0x98, 0x7e, 0xdf,
	0x3c, 0x50, 0x73, 0xb3, 0x8e, 0xed, 0x60, 0xf3, 0xdb, 0x51, 0x1e, 0x0a, 0x7f, 0x5a, 0xb0, 0xbf,
	0xf4, 0xef, 0xe3, 0xa0, 0x6e, 0xa4, 0xff, 0x12, 0x5c, 0x3d, 0xc2, 0xa6, 0xfd, 0x0e, 0x74, 0x47,
	0x23, 0x84, 0xcd, 0x67, 0x8e, 0x73, 0xf2, 0xda, 0x05, 0x79, 0x9f, 0xec, 0x1b, 0xd5, 0x2a, 0x2a,
	0x19, 0x21, 0xe9, 0x34, 0x35, 0xd9, 0xad, 0x01, 0x9c, 0xe9, 0xf9, 0x70, 0xca, 0xa5, 0x64, 0xb1,
	0xef, 0x36, 0xad, 0xd6, 0x5e, 0xb4, 0x06, 0xc2, 0x01, 0xb8, 0xdd, 0x44, 0x3c, 0xb0, 0x8c, 0x84,
	0x50, 0xa3, 0x58, 0xc2, 0x94, 0x25, 0x72, 0xf5, 0xb8, 0x05, 0xec, 0x9f, 0x8b, 0xe8, 0xfc, 0x76,
	0xc0, 0xc1, 0x69, 0x25, 0xe7, 0xe0, 0x5d, 0x64, 0x8c, 0x4a, 0xa6, 0xcd, 0x2d, 0x83, 0x1c, 0x6c,
	0xc1, 0x48, 0x1b, 0xea, 0x97, 0x4c, 0x76, 0x27, 0x93, 0xbe, 0x1e, 0x72, 0x02, 0xe8, 0x84, 0x1b,
	0x25, 0x38, 0x58, 0x07, 0xe8, 0xf6, 0x3f, 0x07, 0x6f, 0x90, 0xc6, 0x3b, 0x93, 0xbc, 0x01, 0xaf,
	0xc7, 0x26, 0xec, 0x6f, 0x61, 0x39, 0x5a, 0xd2, 0x81, 0xbd, 0x4b, 0x26, 0x77, 0xa3, 0x38, 0x01,
	0xb8, 0x62, 0xf4, 0xde, 0x30, 0x98, 0xc4, 0x57, 0xcb, 0xaa, 0x70, 0xfd, 0x7b, 0xb5, 0x02, 0x69,
	0xb6, 0x23, 0xc1, 0x39, 0x78, 0x5f, 0x79, 0xc2, 0xc5, 0xed, 0x6e, 0x61, 0xaf, 0xa1, 0xae, 0x9f,
	0x65, 0xb9, 0xe9, 0x0a, 0xfb, 0x22, 0x28, 0x58, 0xe4, 0x2d, 0xec, 0xeb, 0xc7, 0x30, 0x80, 0x30,
	0xde, 0x66, 0xad, 0x07, 0x8d, 0xbc, 0xb7, 0x7e, 0x91, 0x13, 0xa8, 0x6b, 0x69, 0xb7, 0xdf, 0x9f,
	0xaf, 0xbb, 0x0d, 0xf5, 0x8b, 0x5b, 0x36, 0xba, 0x5b, 0x5d, 0xae, 0x55, 0x5a, 0x6f, 0x9c, 0x82,
	0xf7, 0x19, 0x80, 0x5a, 0x13, 0x5a, 0xc3, 0x4d, 0x41, 0x37, 0xb7, 0x3a, 0xf9, 0x08, 0x0d, 0x95,
	0x7d, 0x71, 0x3c, 0xff, 0xd3, 0x1c, 0x05, 0x30, 0x78, 0xdc, 0xce, 0xe4, 0x0c, 0x6a, 0x7d, 0x1c,
	0x15, 0x13, 0x65, 0x16, 0x3a, 0x0e, 0x4c, 0xb0, 0xed, 0x8a, 0xcf, 0xce, 0x77, 0xf5, 0xbb, 0x1e,
	0xba, 0xf8, 0x9f, 0x7e, 0xf7, 0x27, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x85, 0x50, 0xc1, 0xc9, 0x07,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StudyClient is the client API for Study service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StudyClient interface {
	CreateStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error)
	GetAllStudies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StudyArray, error)
	UpdateStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error)
	DeleteStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*Empty, error)
	GetStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error)
	LeaveStudy(ctx context.Context, in *SignUpData, opts ...grpc.CallOption) (*Empty, error)
	StartStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error)
	FinishStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error)
	CreateTrigger(ctx context.Context, in *Trigger, opts ...grpc.CallOption) (*Trigger, error)
	GetAllTriggers(ctx context.Context, in *StudyID, opts ...grpc.CallOption) (*TriggerArray, error)
	DeleteTrigger(ctx context.Context, in *Trigger, opts ...grpc.CallOption) (*Empty, error)
	CheckTriggers(ctx context.Context, in *Attributes, opts ...grpc.CallOption) (*Empty, error)
	UserSignUp(ctx context.Context, in *SignUpData, opts ...grpc.CallOption) (*UserMetaData, error)
	GetAssignedSurvey(ctx context.Context, in *AssignedSurvey, opts ...grpc.CallOption) (*SurveyData, error)
	SubmitSurvey(ctx context.Context, in *Answer, opts ...grpc.CallOption) (*AssignedSurvey, error)
}

type studyClient struct {
	cc *grpc.ClientConn
}

func NewStudyClient(cc *grpc.ClientConn) StudyClient {
	return &studyClient{cc}
}

func (c *studyClient) CreateStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error) {
	out := new(StudyMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/CreateStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) GetAllStudies(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StudyArray, error) {
	out := new(StudyArray)
	err := c.cc.Invoke(ctx, "/api.Study/GetAllStudies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) UpdateStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error) {
	out := new(StudyMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/UpdateStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) DeleteStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.Study/DeleteStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) GetStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error) {
	out := new(StudyMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/GetStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) LeaveStudy(ctx context.Context, in *SignUpData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.Study/LeaveStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) StartStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error) {
	out := new(StudyMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/StartStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) FinishStudy(ctx context.Context, in *StudyMetaData, opts ...grpc.CallOption) (*StudyMetaData, error) {
	out := new(StudyMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/FinishStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) CreateTrigger(ctx context.Context, in *Trigger, opts ...grpc.CallOption) (*Trigger, error) {
	out := new(Trigger)
	err := c.cc.Invoke(ctx, "/api.Study/CreateTrigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) GetAllTriggers(ctx context.Context, in *StudyID, opts ...grpc.CallOption) (*TriggerArray, error) {
	out := new(TriggerArray)
	err := c.cc.Invoke(ctx, "/api.Study/GetAllTriggers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) DeleteTrigger(ctx context.Context, in *Trigger, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.Study/DeleteTrigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) CheckTriggers(ctx context.Context, in *Attributes, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.Study/CheckTriggers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) UserSignUp(ctx context.Context, in *SignUpData, opts ...grpc.CallOption) (*UserMetaData, error) {
	out := new(UserMetaData)
	err := c.cc.Invoke(ctx, "/api.Study/UserSignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) GetAssignedSurvey(ctx context.Context, in *AssignedSurvey, opts ...grpc.CallOption) (*SurveyData, error) {
	out := new(SurveyData)
	err := c.cc.Invoke(ctx, "/api.Study/GetAssignedSurvey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studyClient) SubmitSurvey(ctx context.Context, in *Answer, opts ...grpc.CallOption) (*AssignedSurvey, error) {
	out := new(AssignedSurvey)
	err := c.cc.Invoke(ctx, "/api.Study/SubmitSurvey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StudyServer is the server API for Study service.
type StudyServer interface {
	CreateStudy(context.Context, *StudyMetaData) (*StudyMetaData, error)
	GetAllStudies(context.Context, *Empty) (*StudyArray, error)
	UpdateStudy(context.Context, *StudyMetaData) (*StudyMetaData, error)
	DeleteStudy(context.Context, *StudyMetaData) (*Empty, error)
	GetStudy(context.Context, *StudyMetaData) (*StudyMetaData, error)
	LeaveStudy(context.Context, *SignUpData) (*Empty, error)
	StartStudy(context.Context, *StudyMetaData) (*StudyMetaData, error)
	FinishStudy(context.Context, *StudyMetaData) (*StudyMetaData, error)
	CreateTrigger(context.Context, *Trigger) (*Trigger, error)
	GetAllTriggers(context.Context, *StudyID) (*TriggerArray, error)
	DeleteTrigger(context.Context, *Trigger) (*Empty, error)
	CheckTriggers(context.Context, *Attributes) (*Empty, error)
	UserSignUp(context.Context, *SignUpData) (*UserMetaData, error)
	GetAssignedSurvey(context.Context, *AssignedSurvey) (*SurveyData, error)
	SubmitSurvey(context.Context, *Answer) (*AssignedSurvey, error)
}

// UnimplementedStudyServer can be embedded to have forward compatible implementations.
type UnimplementedStudyServer struct {
}

func (*UnimplementedStudyServer) CreateStudy(ctx context.Context, req *StudyMetaData) (*StudyMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStudy not implemented")
}
func (*UnimplementedStudyServer) GetAllStudies(ctx context.Context, req *Empty) (*StudyArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStudies not implemented")
}
func (*UnimplementedStudyServer) UpdateStudy(ctx context.Context, req *StudyMetaData) (*StudyMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStudy not implemented")
}
func (*UnimplementedStudyServer) DeleteStudy(ctx context.Context, req *StudyMetaData) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStudy not implemented")
}
func (*UnimplementedStudyServer) GetStudy(ctx context.Context, req *StudyMetaData) (*StudyMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStudy not implemented")
}
func (*UnimplementedStudyServer) LeaveStudy(ctx context.Context, req *SignUpData) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeaveStudy not implemented")
}
func (*UnimplementedStudyServer) StartStudy(ctx context.Context, req *StudyMetaData) (*StudyMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartStudy not implemented")
}
func (*UnimplementedStudyServer) FinishStudy(ctx context.Context, req *StudyMetaData) (*StudyMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishStudy not implemented")
}
func (*UnimplementedStudyServer) CreateTrigger(ctx context.Context, req *Trigger) (*Trigger, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTrigger not implemented")
}
func (*UnimplementedStudyServer) GetAllTriggers(ctx context.Context, req *StudyID) (*TriggerArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTriggers not implemented")
}
func (*UnimplementedStudyServer) DeleteTrigger(ctx context.Context, req *Trigger) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTrigger not implemented")
}
func (*UnimplementedStudyServer) CheckTriggers(ctx context.Context, req *Attributes) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckTriggers not implemented")
}
func (*UnimplementedStudyServer) UserSignUp(ctx context.Context, req *SignUpData) (*UserMetaData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserSignUp not implemented")
}
func (*UnimplementedStudyServer) GetAssignedSurvey(ctx context.Context, req *AssignedSurvey) (*SurveyData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAssignedSurvey not implemented")
}
func (*UnimplementedStudyServer) SubmitSurvey(ctx context.Context, req *Answer) (*AssignedSurvey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitSurvey not implemented")
}

func RegisterStudyServer(s *grpc.Server, srv StudyServer) {
	s.RegisterService(&_Study_serviceDesc, srv)
}

func _Study_CreateStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).CreateStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/CreateStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).CreateStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_GetAllStudies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).GetAllStudies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/GetAllStudies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).GetAllStudies(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_UpdateStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).UpdateStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/UpdateStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).UpdateStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_DeleteStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).DeleteStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/DeleteStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).DeleteStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_GetStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).GetStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/GetStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).GetStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_LeaveStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).LeaveStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/LeaveStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).LeaveStudy(ctx, req.(*SignUpData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_StartStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).StartStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/StartStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).StartStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_FinishStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyMetaData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).FinishStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/FinishStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).FinishStudy(ctx, req.(*StudyMetaData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_CreateTrigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Trigger)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).CreateTrigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/CreateTrigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).CreateTrigger(ctx, req.(*Trigger))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_GetAllTriggers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StudyID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).GetAllTriggers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/GetAllTriggers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).GetAllTriggers(ctx, req.(*StudyID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_DeleteTrigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Trigger)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).DeleteTrigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/DeleteTrigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).DeleteTrigger(ctx, req.(*Trigger))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_CheckTriggers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Attributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).CheckTriggers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/CheckTriggers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).CheckTriggers(ctx, req.(*Attributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_UserSignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).UserSignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/UserSignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).UserSignUp(ctx, req.(*SignUpData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_GetAssignedSurvey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignedSurvey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).GetAssignedSurvey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/GetAssignedSurvey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).GetAssignedSurvey(ctx, req.(*AssignedSurvey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Study_SubmitSurvey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Answer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudyServer).SubmitSurvey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Study/SubmitSurvey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudyServer).SubmitSurvey(ctx, req.(*Answer))
	}
	return interceptor(ctx, in, info, handler)
}

var _Study_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Study",
	HandlerType: (*StudyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStudy",
			Handler:    _Study_CreateStudy_Handler,
		},
		{
			MethodName: "GetAllStudies",
			Handler:    _Study_GetAllStudies_Handler,
		},
		{
			MethodName: "UpdateStudy",
			Handler:    _Study_UpdateStudy_Handler,
		},
		{
			MethodName: "DeleteStudy",
			Handler:    _Study_DeleteStudy_Handler,
		},
		{
			MethodName: "GetStudy",
			Handler:    _Study_GetStudy_Handler,
		},
		{
			MethodName: "LeaveStudy",
			Handler:    _Study_LeaveStudy_Handler,
		},
		{
			MethodName: "StartStudy",
			Handler:    _Study_StartStudy_Handler,
		},
		{
			MethodName: "FinishStudy",
			Handler:    _Study_FinishStudy_Handler,
		},
		{
			MethodName: "CreateTrigger",
			Handler:    _Study_CreateTrigger_Handler,
		},
		{
			MethodName: "GetAllTriggers",
			Handler:    _Study_GetAllTriggers_Handler,
		},
		{
			MethodName: "DeleteTrigger",
			Handler:    _Study_DeleteTrigger_Handler,
		},
		{
			MethodName: "CheckTriggers",
			Handler:    _Study_CheckTriggers_Handler,
		},
		{
			MethodName: "UserSignUp",
			Handler:    _Study_UserSignUp_Handler,
		},
		{
			MethodName: "GetAssignedSurvey",
			Handler:    _Study_GetAssignedSurvey_Handler,
		},
		{
			MethodName: "SubmitSurvey",
			Handler:    _Study_SubmitSurvey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "study.proto",
}
