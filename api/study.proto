syntax = "proto3";

package api;
option go_package = "api";

import "survey.proto";

message StudyMetaData {
    string id = 1;
    string name = 2;
    string description = 3;
    int64 startDate = 4;
    string status = 5;
    repeated string users = 6;
}

message Empty{
}

message StudyID{
    string studyID = 1;
}

message StudyArray{
    repeated StudyMetaData studies = 1;
}

message SignUpData {
    string studyID = 1;
    UserMetaData user = 2;
}


message Trigger {
    string id = 1;
    repeated string condition = 2;
    repeated Action action = 3;
    string studyID = 4;

    message Condition {
        repeated string condition = 1;
    }

}

message TriggerArray{
    repeated Trigger triggers = 1;
}

message Action {
    string type = 1;
    string value = 2;
}

message Attributes {
    string userID = 1;
    int32 age = 2;
    string sick = 3;
    int32 weight = 4;
}

message UserMetaData {
    string id = 1;
    int64 timeLastAssigned = 2;
    int64 timeToSend = 3;
}

message AssignedSurvey{
    string id = 1;
    SurveyData survey = 2;
    string userID = 3;
    string studyID = 4;
    int64 timestamp = 5;
    bool submitted = 6;
}

message Answer{
    string assignmentID = 1;
    SurveyData survey = 2;
}


service Study {
    rpc CreateStudy (StudyMetaData) returns (StudyMetaData);
    rpc GetAllStudies (Empty) returns (StudyArray);
    rpc UpdateStudy (StudyMetaData) returns (StudyMetaData);
    rpc DeleteStudy (StudyMetaData) returns (Empty);
    rpc GetStudy (StudyMetaData) returns (StudyMetaData);
    rpc LeaveStudy (SignUpData) returns (Empty);

    rpc CreateTrigger (Trigger) returns (Trigger);
    rpc GetAllTriggers (StudyID) returns (TriggerArray);
    rpc DeleteTrigger (Trigger) returns (Empty);
    rpc CheckTrigger (Attributes) returns (stream Action);

    rpc UserSignUp (SignUpData) returns (UserMetaData);

    rpc GetAssignedSurvey (AssignedSurvey) returns (SurveyData);
    rpc AnswerSurvey (Answer) returns (AssignedSurvey);
}