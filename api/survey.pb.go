// Code generated by protoc-gen-go. DO NOT EDIT.
// source: survey.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SurveyData struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Study                string   `protobuf:"bytes,3,opt,name=study,proto3" json:"study,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SurveyData) Reset()         { *m = SurveyData{} }
func (m *SurveyData) String() string { return proto.CompactTextString(m) }
func (*SurveyData) ProtoMessage()    {}
func (*SurveyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a40f94eaa8e6ca46, []int{0}
}

func (m *SurveyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SurveyData.Unmarshal(m, b)
}
func (m *SurveyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SurveyData.Marshal(b, m, deterministic)
}
func (m *SurveyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SurveyData.Merge(m, src)
}
func (m *SurveyData) XXX_Size() int {
	return xxx_messageInfo_SurveyData.Size(m)
}
func (m *SurveyData) XXX_DiscardUnknown() {
	xxx_messageInfo_SurveyData.DiscardUnknown(m)
}

var xxx_messageInfo_SurveyData proto.InternalMessageInfo

func (m *SurveyData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SurveyData) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SurveyData) GetStudy() string {
	if m != nil {
		return m.Study
	}
	return ""
}

func (m *SurveyData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*SurveyData)(nil), "api.SurveyData")
}

func init() { proto.RegisterFile("survey.proto", fileDescriptor_a40f94eaa8e6ca46) }

var fileDescriptor_a40f94eaa8e6ca46 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2e, 0x2d, 0x2a,
	0x4b, 0xad, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xca, 0xe0,
	0xe2, 0x0a, 0x06, 0x0b, 0xba, 0x24, 0x96, 0x24, 0x0a, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0x70, 0x06, 0x31, 0x65, 0xa6, 0x08, 0x09, 0x71, 0xb1, 0x94, 0x54, 0x16, 0xa4,
	0x4a, 0x30, 0x81, 0x45, 0xc0, 0x6c, 0x21, 0x11, 0x2e, 0xd6, 0xe2, 0x92, 0xd2, 0x94, 0x4a, 0x09,
	0x66, 0xb0, 0x20, 0x84, 0x23, 0xa4, 0xc0, 0xc5, 0x9d, 0x92, 0x5a, 0x9c, 0x5c, 0x94, 0x59, 0x50,
	0x92, 0x99, 0x9f, 0x27, 0xc1, 0x02, 0x96, 0x43, 0x16, 0x32, 0xb2, 0xe2, 0x62, 0x83, 0xd8, 0x24,
	0x64, 0xc0, 0xc5, 0xe3, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x0a, 0xe5, 0xf3, 0xeb, 0x25, 0x16, 0x64,
	0xea, 0x21, 0x9c, 0x21, 0x85, 0x2e, 0x90, 0xc4, 0x06, 0x76, 0xb1, 0x31, 0x20, 0x00, 0x00, 0xff,
	0xff, 0x0a, 0xe1, 0x8e, 0xed, 0xc1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SurveyClient is the client API for Survey service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SurveyClient interface {
	CreateSurvey(ctx context.Context, in *SurveyData, opts ...grpc.CallOption) (*SurveyData, error)
}

type surveyClient struct {
	cc *grpc.ClientConn
}

func NewSurveyClient(cc *grpc.ClientConn) SurveyClient {
	return &surveyClient{cc}
}

func (c *surveyClient) CreateSurvey(ctx context.Context, in *SurveyData, opts ...grpc.CallOption) (*SurveyData, error) {
	out := new(SurveyData)
	err := c.cc.Invoke(ctx, "/api.Survey/CreateSurvey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SurveyServer is the server API for Survey service.
type SurveyServer interface {
	CreateSurvey(context.Context, *SurveyData) (*SurveyData, error)
}

// UnimplementedSurveyServer can be embedded to have forward compatible implementations.
type UnimplementedSurveyServer struct {
}

func (*UnimplementedSurveyServer) CreateSurvey(ctx context.Context, req *SurveyData) (*SurveyData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSurvey not implemented")
}

func RegisterSurveyServer(s *grpc.Server, srv SurveyServer) {
	s.RegisterService(&_Survey_serviceDesc, srv)
}

func _Survey_CreateSurvey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SurveyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurveyServer).CreateSurvey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Survey/CreateSurvey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurveyServer).CreateSurvey(ctx, req.(*SurveyData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Survey_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Survey",
	HandlerType: (*SurveyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSurvey",
			Handler:    _Survey_CreateSurvey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "survey.proto",
}
